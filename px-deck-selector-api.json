{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "### Usage\n\n    <px-deck-selector decks=\"[{...}]\" selected-deck=\"{...}\"></px-deck-selector>\n\n### Styling\n\nThe following custom properties are available for styling:\n\nCustom property | Description\n----------------|-------------\n`--px-deck-selector-border-color` | Border color for the dropdown\n`--px-deck-selector-shadow-color` | Shadow color for the dropdown\n`--px-deck-selector-background-color` | Background color for the dropdown\n`--px-deck-selector-text-color` | Text color for the dropdown items\n`--px-deck-selector-background-color--hover` | Background color for the dropdown items when hovered\n`--px-deck-selector-text-color--hover` | Text color for the dropdown items when hovered\n`--px-deck-selector-background-color--selected` | Background color for the dropdown item that is selected\n`--px-deck-selector-text-color--selected` | Text color for the dropdown item that is selected\n`--px-deck-selector-li-border` | Border color for the separator between decks and actions",
      "summary": "",
      "path": "px-deck-selector.html",
      "properties": [
        {
          "name": "decks",
          "type": "Array",
          "description": "Array of deck objects to display. The first deck will always be selected initially.\nEach object needs a `name` and `url` property.\n\n     [\n         {id: 1, name: 'First Deck', url: '/deck1'},\n         {id: 2, name: 'Second Deck', url: '/deck2'},\n         {id: 3, name: 'Third Deck', url: '/deck3'}\n     ]",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_setDecks\""
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "selectedDeck",
          "type": "Object",
          "description": "Used for getting or setting the currently selected deck.  If no deck is specified, the first one will be selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "_isDecks",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_isDropdownOpen",
          "type": "boolean",
          "description": "Needed for IE...",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 100,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "configOptions",
          "type": "Object",
          "description": "Config options appear after the list of decks in a separate section, and can be used by an application\nto add or remove decks from the menu, for example. The object should contain an `actionType` which is the\ntext which will be displayed in the menu, and an `eventType` which will be included in evt.detail of\nthe `deckEvent` event that is fired when the option is selected. Applications should listen for the `deckEvent`\nevent and handle it accordingly (by displaying a modal for adding/removing decks, for example).\n\n     {\n         edit : true,\n         actionType : \"Add Dashboard\",\n         eventType : \"addDashboard\"\n     }",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "_setDecks",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 128,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeIsDecks",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decks"
            }
          ]
        },
        {
          "name": "_hideChevronIfNoDecks",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isDecks"
            }
          ]
        },
        {
          "name": "_isSelected",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "deck"
            },
            {
              "name": "selectedDeck"
            }
          ]
        },
        {
          "name": "_toggleDropdown",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_selectDeck",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_triggerDeckEvent",
          "description": "Fires the event \"deckEvent\" where evt.detail will contain the eventType specified in configOptions.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 4
            },
            "end": {
              "line": 164,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_closeMenu",
          "description": "Called when the user clicks outside of the menu.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "el"
            }
          ]
        },
        {
          "name": "_handleDocumentClick",
          "description": "Adding and removing event listener on the document",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 4
            },
            "end": {
              "line": 203,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 55,
          "column": 10
        },
        "end": {
          "line": 217,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "decks",
          "description": "Array of deck objects to display. The first deck will always be selected initially.\nEach object needs a `name` and `url` property.\n\n     [\n         {id: 1, name: 'First Deck', url: '/deck1'},\n         {id: 2, name: 'Second Deck', url: '/deck2'},\n         {id: 3, name: 'Third Deck', url: '/deck3'}\n     ]",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "selected-deck",
          "description": "Used for getting or setting the currently selected deck.  If no deck is specified, the first one will be selected.",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "config-options",
          "description": "Config options appear after the list of decks in a separate section, and can be used by an application\nto add or remove decks from the menu, for example. The object should contain an `actionType` which is the\ntext which will be displayed in the menu, and an `eventType` which will be included in evt.detail of\nthe `deckEvent` event that is fired when the option is selected. Applications should listen for the `deckEvent`\nevent and handle it accordingly (by displaying a modal for adding/removing decks, for example).\n\n     {\n         edit : true,\n         actionType : \"Add Dashboard\",\n         eventType : \"addDashboard\"\n     }",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "deckEvent",
          "description": "deckEvent",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-deck-changed",
          "description": "Fired when the `selectedDeck` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "config-options-changed",
          "description": "Fired when the `configOptions` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-deck-selector"
    }
  ]
}
